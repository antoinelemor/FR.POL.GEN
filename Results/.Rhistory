models[['OLS3']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate:dangerous_frame_rate+TH100+moderate_frame_rate+dangerous_frame_rate+CC100+CD100+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS4']] =lm(lead(stringencyPHM, 1) ~ TH100+moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+moderate_frame_rate:dangerous_frame_rate+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS5']] =lm(lead(stringencyPHM, 1) ~ TH100+moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS6']] =lm(lead(stringencyPHM, 1)~ TH100+moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(stringencyPHM, 1)'='Stringency - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'suppression_measure_rate'='suppression_measure_rate', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'Scientific sources', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence Rates on Suppression Measures Rate'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Models
models <- list()
models[['OLS1']] =lm(stringencyPHM ~ TH100+dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS2']] =lm(stringencyPHM ~ TH100+moderate_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS3']] =lm(stringencyPHM ~ moderate_frame_rate:dangerous_frame_rate+TH100+moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS4']] =lm(stringencyPHM ~ TH100+moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+moderate_frame_rate:dangerous_frame_rate+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS5']] =lm(stringencyPHM ~ TH100+moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS6']] =lm(stringencyPHM ~ TH100+moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(stringencyPHM, 1)'='Stringency - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'suppression_measure_rate'='suppression_measure_rate', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'Scientific sources', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence Rates on Suppression Measures Rate'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(lead(stringencyPHM, 1) ~ TH100+dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS2']] =lm(lead(stringencyPHM, 1) ~ TH100+moderate_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS3']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate:dangerous_frame_rate+TH100+moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS4']] =lm(lead(stringencyPHM, 1) ~ TH100+moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+moderate_frame_rate:dangerous_frame_rate+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS5']] =lm(lead(stringencyPHM, 1) ~ TH100+moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS6']] =lm(lead(stringencyPHM, 1)~ TH100+moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(stringencyPHM, 1)'='Stringency - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'suppression_measure_rate'='suppression_measure_rate', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'Scientific sources', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence Rates on Suppression Measures Rate'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(lead(stringencyPHM, 1) ~ TH100+dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS2']] =lm(lead(stringencyPHM, 1) ~ TH100+moderate_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS3']] =lm(lead(stringencyPHM, 1) ~ TH100+moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS4']] =lm(lead(stringencyPHM, 1) ~ TH100+moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+moderate_frame_rate:dangerous_frame_rate+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS5']] =lm(lead(stringencyPHM, 1) ~ TH100+moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS6']] =lm(lead(stringencyPHM, 1)~ TH100+moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(stringencyPHM, 1)'='Stringency - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'suppression_measure_rate'='suppression_measure_rate', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'Scientific sources', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence Rates on Suppression Measures Rate'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Base path
import_data_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Database/annotated_data/"
export_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Results"
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Packages
library(modelsummary)
library(flextable)
library(tidyverse)
library(officer)
library(knitr)
library(kableExtra)
## OLS MODELS ##
# Base path
import_data_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Database/annotated_data/"
export_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Results"
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ CC100+CD100+TH100+dangerous_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ CC100+CD100+TH100+moderate_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS3']] =lm(suppression_measure_rate ~ CC100+CD100+TH100+moderate_frame_rate+dangerous_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS4']] =lm(suppression_measure_rate ~ moderate_frame_rate:dangerous_frame_rate+CC100+CD100+TH100+moderate_frame_rate+dangerous_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS5']] =lm(suppression_measure_rate ~ TH100+CC100+CD100+moderate_frame_rate+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS6']] =lm(suppression_measure_rate ~ TH100+CC100+CD100+dangerous_frame_rate+moderate_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
## TABLEAU DE CORRELATION ##
# Chargement des bibliothèques nécessaires
library(readr)  # Pour la fonction read_csv
library(dplyr)  # Pour la manipulation de données
library(ggplot2)  # Pour la création de graphiques
library(ggcorrplot)  # Pour visualiser la matrice de corrélation
## TABLEAU DE CORRELATION ##
# Chargement des bibliothèques nécessaires
library(readr)  # Pour la fonction read_csv
library(dplyr)  # Pour la manipulation de données
library(ggplot2)  # Pour la création de graphiques
library(ggcorrplot)  # Pour visualiser la matrice de corrélation
install.packages("ggcorrplot")
## TABLEAU DE CORRELATION ##
# Chargement des bibliothèques nécessaires
library(readr)  # Pour la fonction read_csv
library(dplyr)  # Pour la manipulation de données
library(ggplot2)  # Pour la création de graphiques
library(ggcorrplot)  # Pour visualiser la matrice de corrélation
# Importation des données
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read_csv(input_file)
# Création de la matrice de corrélation
variables <- c("CC100", "CD100", "TH100", "dangerous_frame_rate", "moderate_frame_rate", "evidence_full", "lag(suppression_measure_rate, 1)", "suppression_measure_rate")
cor_data <- reg_data_daily %>%
select(all_of(variables)) %>%
cor(use = "complete.obs")  # Calcule la corrélation en excluant les NA
library(readr)  # Pour la fonction read_csv
library(dplyr)  # Pour la manipulation de données
library(ggplot2)  # Pour la création de graphiques
library(ggcorrplot)  # Pour visualiser la matrice de corrélation
# Importation des données
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read_csv(input_file)
# Création de la matrice de corrélation
variables <- c("CC100", "CD100", "TH100", "dangerous_frame_rate", "moderate_frame_rate", "evidence_full", "suppression_measure_rate")
cor_data <- reg_data_daily %>%
select(all_of(variables)) %>%
cor(use = "complete.obs")  # Calcule la corrélation en excluant les NA
# Visualisation de la matrice de corrélation
corrplot <- ggcorrplot(cor_data, hc.order = TRUE, type = "lower",
lab = TRUE, tl.cex = 0.8, tl.col = "black")
# Affichage du graphique
print(corrplot)
# Chargement des bibliothèques nécessaires
library(readr)  # Pour la fonction read_csv
library(dplyr)  # Pour la manipulation de données
library(ggplot2)  # Pour la création de graphiques
library(ggcorrplot)  # Pour visualiser la matrice de corrélation
# Importation des données
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read_csv(input_file)
# Vérifiez que les noms de variables dans 'reg_data_daily' sont corrects
print(colnames(reg_data_daily))
# Création de la matrice de corrélation
variables <- c("CC100", "CD100", "TH100", "dangerous_frame_rate", "moderate_frame_rate", "evidence_full", "suppression_measure_rate")
cor_data <- reg_data_daily %>%
select(all_of(variables)) %>%
cor(use = "complete.obs")  # Calcule la corrélation en excluant les NA
# Visualisation de la matrice de corrélation
corrplot <- ggcorrplot(cor_data, hc.order = TRUE, type = "lower",
lab = TRUE, tl.cex = 0.6, tl.col = "black", lab_title = variables)
# Chargement des bibliothèques nécessaires
library(readr)  # Pour la fonction read_csv
library(dplyr)  # Pour la manipulation de données
library(ggplot2)  # Pour la création de graphiques
library(ggcorrplot)  # Pour visualiser la matrice de corrélation
# Importation des données
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read_csv(input_file)
# Vérifiez que les noms de variables dans 'reg_data_daily' sont corrects
print(colnames(reg_data_daily))
# Création de la matrice de corrélation
variables <- c("CC100", "CD100", "TH100", "dangerous_frame_rate", "moderate_frame_rate", "evidence_full", "suppression_measure_rate")
cor_data <- reg_data_daily %>%
select(all_of(variables)) %>%
cor(use = "complete.obs")  # Calcule la corrélation en excluant les NA
# Visualisation de la matrice de corrélation
corrplot <- ggcorrplot(cor_data, hc.order = TRUE, type = "lower",
lab = TRUE, tl.cex = 0.6, tl.col = "black", lab_title = variables)
## TABLEAU DE CORRELATION ##
# Chargement des bibliothèques nécessaires
library(readr)  # Pour la fonction read_csv
library(dplyr)  # Pour la manipulation de données
library(ggplot2)  # Pour la création de graphiques
library(ggcorrplot)  # Pour visualiser la matrice de corrélation
# Importation des données
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read_csv(input_file)
# Vérifiez que les noms de variables dans 'reg_data_daily' sont corrects
print(colnames(reg_data_daily))
# Création de la matrice de corrélation
variables <- c("CC100", "CD100", "TH100", "dangerous_frame_rate", "moderate_frame_rate", "evidence_full", "suppression_measure_rate")
cor_data <- reg_data_daily %>%
select(all_of(variables)) %>%
cor(use = "complete.obs")  # Calcule la corrélation en excluant les NA
# Visualisation de la matrice de corrélation
corrplot <- ggcorrplot(cor_data, hc.order = TRUE, type = "lower",
lab = TRUE, tl.cex = 0.6, tl.col = "black")
# Affichage du graphique
print(corrplot)
# Vérifiez que les noms de variables dans 'reg_data_daily' sont corrects
print(colnames(reg_data_daily))
View(cor_data)
# Base path
import_data_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Database/annotated_data/"
export_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Results"
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Packages
library(modelsummary)
library(flextable)
library(tidyverse)
library(officer)
library(knitr)
library(kableExtra)
## OLS MODELS ##
# Base path
import_data_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Database/annotated_data/"
export_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Results"
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ CC100+CD100+TH100+dangerous_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ CC100+CD100+TH100+moderate_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS3']] =lm(suppression_measure_rate ~ CC100+CD100+TH100+moderate_frame_rate+dangerous_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS4']] =lm(suppression_measure_rate ~ moderate_frame_rate:dangerous_frame_rate+CC100+CD100+TH100+moderate_frame_rate+dangerous_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS5']] =lm(suppression_measure_rate ~ TH100+CC100+CD100+moderate_frame_rate+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS6']] =lm(suppression_measure_rate ~ TH100+CC100+CD100+dangerous_frame_rate+moderate_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Set the export file path for the regression table
table_file_name <- "QC.frame.results_OLS_suppression_measures.docx"
table_full_path <- file.path(export_path, table_file_name)
# Create a Word document to store the table
doc <- read_docx() %>%
body_add_flextable(tab)
# Save the Word document
print(doc, target = table_full_path)
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ TH100+CC100+CD100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ TH100+CC100+CD100+moderate_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ CC100+CD100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ CC100+CD100+moderate_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ TH100+CC100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ TH100+CC100+moderate_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Base path
import_data_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Database/annotated_data/"
export_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Results"
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(mitigation_measure_rate ~ CC100+CD100+moderate_frame_rate+dangerous_frame_rate+evidence_full+lag(mitigation_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(mitigation_measure_rate ~ CC100+CD100+moderate_frame_rate+dangerous_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(mitigation_measure_rate, 1), data = reg_data_daily)
models[['OLS3']] =lm(mitigation_measure_rate ~ CC100+CD100+moderate_frame_rate+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(mitigation_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(mitigation_measure_rate, 1)'='mitigation_measure_rate - 1',  'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi','moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'suppression_measure_rate'='suppression_measure_rate','evidence_full'='evidence_full', 'source_rate' = 'Scientific sources', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'suppression_measure_rate:evidence_full'='evidence_full * suppression_measure_rate', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'moderate_frame_rate:suppression_measure_rate'='Moderate frame * Suppression measures', 'moderate_frame_rate:dangerous_frame_rate'='Moderate frame * Dangerous frame')
cap <- 'Table 1. Effects of Frames and Evidence on Mitigation Measures'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(lead(stringencyPHM, 1) ~ dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS2']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS3']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS4']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+moderate_frame_rate:dangerous_frame_rate+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS5']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS6']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(stringencyPHM, 1)'='Stringency - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'suppression_measure_rate'='suppression_measure_rate', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'Scientific sources', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence Rates on Suppression Measures Rate'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Base path
import_data_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Database/annotated_data/"
export_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Results"
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(lead(stringencyPHM, 1) ~ dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS2']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS3']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS4']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+dangerous_frame_rate+CC100+CD100+evidence_full+moderate_frame_rate:dangerous_frame_rate+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS5']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS6']] =lm(lead(stringencyPHM, 1) ~ moderate_frame_rate+CC100+CD100+dangerous_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(stringencyPHM, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(stringencyPHM, 1)'='Stringency - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'suppression_measure_rate'='suppression_measure_rate', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'Scientific sources', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence Rates on Suppression Measures Rate'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Set the export file path for the regression table
table_file_name <- "QC.frame.results_OLS_SPHM.docx"
table_full_path <- file.path(export_path, table_file_name)
# Create a Word document to store the table
doc <- read_docx() %>%
body_add_flextable(tab)
# Save the Word document
print(doc, target = table_full_path)
library(ggplot2)
library(dplyr)
# Chargement des données
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Définition des modèles
models <- list()
models[['OLS1']] = lm(mitigation_measure_rate ~ CC100 + CD100 + moderate_frame_rate + dangerous_frame_rate + evidence_full + lag(mitigation_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] = lm(mitigation_measure_rate ~ CC100 + CD100  + moderate_frame_rate + dangerous_frame_rate + evidence_full + moderate_frame_rate:evidence_full + lag(mitigation_measure_rate, 1), data = reg_data_daily)
models[['OLS3']] = lm(mitigation_measure_rate ~ CC100 + CD100  + moderate_frame_rate + dangerous_frame_rate + evidence_full + dangerous_frame_rate:evidence_full + lag(mitigation_measure_rate, 1), data = reg_data_daily)
# Extraction des coefficients pour OLS2
coefficients_OLS2 <- coef(models[['OLS2']])
# Préparation du dataframe pour les valeurs simulées
simulation_data_MOD <- data.frame()
# Niveaux d'EVD pour la simulation
levels_EVD <- seq(0, 100, by = 20)
# Itérer sur chaque niveau d'EVD pour simuler les valeurs à différents niveaux de MOD_FR
for(EVD_val in levels_EVD) {
MOD_vals <- seq(0, 100, by = 1)
# Calcul vectorisé sans plafonnement
SPHM_simulated <- coefficients_OLS2['(Intercept)'] +
coefficients_OLS2['moderate_frame_rate'] * MOD_vals +
coefficients_OLS2['evidence_full'] * EVD_val +
coefficients_OLS2['moderate_frame_rate:evidence_full'] * MOD_vals * EVD_val
temp_data <- data.frame(MOD = MOD_vals, SPHM = SPHM_simulated, EVD = EVD_val)
simulation_data_MOD <- rbind(simulation_data_MOD, temp_data)
}
# Affichage du graphique
p <- ggplot(simulation_data_MOD, aes(x = MOD, y = SPHM, color = as.factor(EVD))) +
geom_line(size = 2) +
labs(title = "Effect of Moderate Frame on Mitigation Measures as a Function of Evidence Level",
x = "Moderate Frame Level",
y = "Projected Mitigation Measures",
color = "Evidence Level") +
theme_minimal() +
theme(
plot.title = element_text(size = 18),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 15),
legend.title = element_text(size = 13),
legend.text = element_text(size = 11)
) +
coord_cartesian(ylim = c(0, 95))  # Appliquer une limite sans suppression des données
print(p)
# Assurez-vous que 'export_path' est défini correctement
ggsave(filename = "QC.unc.results_moderate_frame_and_evidence_mitigation_projections.pdf", plot = p, path = export_path, width = 12, height = 10)
print(p)
library(ggplot2)
library(dplyr)
input_file <- file.path(import_data_path, "QC.frame_database.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
models <- list()
models[['OLS1']] = lm(lead(stringencyPHM, 1) ~  moderate_frame_rate + dangerous_frame_rate + CC100 + CD100 + evidence_full + lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS2']] = lm(lead(stringencyPHM, 1) ~ moderate_frame_rate + CC100 + CD100 + dangerous_frame_rate + evidence_full + dangerous_frame_rate:evidence_full + lag(stringencyPHM, 1), data = reg_data_daily)
models[['OLS3']] = lm(lead(stringencyPHM, 1) ~  moderate_frame_rate + CC100 + CD100 + dangerous_frame_rate + evidence_full + moderate_frame_rate:evidence_full + lag(stringencyPHM, 1), data = reg_data_daily)
# Extraction des coefficients pour OLS3
coefficients_OLS3 <- coef(models[['OLS3']])
# Création d'un dataframe pour les valeurs simulées
simulation_data_MOD <- data.frame()
# Niveaux de 'evidence_full' pour la simulation
levels_EVD <- seq(0, 100, by = 20)
# Pour chaque niveau de 'evidence_full', calculer les valeurs simulées de la sévérité des politiques
for(EVD_val in levels_EVD) {
MOD_vals <- seq(0, 100, by = 1)  # Génération d'une séquence de valeurs pour 'moderate_frame_rate'
SPHM_simulated <- coefficients_OLS3['(Intercept)'] +
coefficients_OLS3['moderate_frame_rate'] * MOD_vals +
coefficients_OLS3['evidence_full'] * EVD_val +
coefficients_OLS3['moderate_frame_rate:evidence_full'] * MOD_vals * EVD_val  # Calcul vectorisé
temp_data <- data.frame(MOD = MOD_vals, SPHM = SPHM_simulated, EVD = EVD_val)
simulation_data_MOD <- rbind(simulation_data_MOD, temp_data)
}
# Affichage du graphique avec 'evidence_full' en abscisse
p <- ggplot(simulation_data_MOD, aes(x = MOD, y = SPHM, color = as.factor(EVD))) +
geom_line(size = 2) +
labs(title = "Effect of Moderate Frame on Policy Stringency as a Function of Evidence Level",
x = "Moderate Frame Level",
y = "Projected Stringency",
color = "Evidence Level") +
theme_minimal() +
theme(
plot.title = element_text(size = 18),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
axis.text.x = element_text(size = 15)
)
print(p)
# Installer et charger le package car pour utiliser la fonction vif()
if (!require(car)) {
install.packages("car", dependencies = TRUE)
library(car)
} else {
library(car)
}
# Chargement des autres bibliothèques nécessaires
library(readr)  # Pour la fonction read_csv
library(dplyr)  # Pour la manipulation de données
# Importation des données
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read_csv(input_file)
# Modèle de régression linéaire
model <- lm(suppression_measure_rate ~ CC100 + CD100 + TH100 + dangerous_frame_rate + moderate_frame_rate + evidence_full, data = reg_data_daily)
# Calcul du VIF
vif_values <- vif(model)
# Afficher les résultats du VIF
print(vif_values)
View(cor_data)
# Base path
import_data_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Database/annotated_data/"
export_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Results"
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Packages
library(modelsummary)
library(flextable)
library(tidyverse)
library(officer)
library(knitr)
library(kableExtra)
## OLS MODELS ##
# Base path
import_data_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Database/annotated_data/"
export_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Results"
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ TH100+CC100+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ TH100+CC100+moderate_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Base path
import_data_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Database/annotated_data/"
export_path <- "/Users/antoine/Documents/GitHub/EVD.COVID_ANALYSIS/EVD.COVID_ANALYSIS/Results"
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ TH100+CC100+moderate_frame_rate+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ TH100+CC100+dangerous_frame_rate+moderate_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ TH100+CC100+moderate_frame_rate+dangerous_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ TH100+CC100+moderate_frame_rate+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS3']] =lm(suppression_measure_rate ~ TH100+CC100+dangerous_frame_rate+moderate_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ TH100+CC100+moderate_frame_rate+dangerous_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ TH100+CC100+moderate_frame_rate+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
# Importing the database
input_file <- file.path(import_data_path, "QC.frame_database_2.csv")
reg_data_daily <- read.csv(input_file, header = TRUE, sep=",")
# Models
models <- list()
models[['OLS1']] =lm(suppression_measure_rate ~ TH100+CC100+moderate_frame_rate+dangerous_frame_rate+evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS2']] =lm(suppression_measure_rate ~ TH100+CC100+moderate_frame_rate+dangerous_frame_rate+evidence_full+dangerous_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
models[['OLS3']] =lm(suppression_measure_rate ~ TH100+CC100+dangerous_frame_rate+moderate_frame_rate+evidence_full+moderate_frame_rate:evidence_full+lag(suppression_measure_rate, 1), data = reg_data_daily)
cm <- c( '(Intercept)' = '(Intercept)', 'lag(suppression_measure_rate, 1)'='suppression_measure_rate - 1', 'CC100' = 'Cases', 'CD100'='Death', 'TH100'='Hospi', 'moderate_frame_rate' = 'Moderate frame','dangerous_frame_rate'= 'Dangerous frame' , 'mitigation_measure_rate'='Mitigation measures','evidence_full'='evidence_full', 'source_rate' = 'scientific source', 'dangerous_frame_rate:evidence_full'='evidence_full * Dangerous frame', 'moderate_frame_rate:mitigation_measure_rate'='Moderate frame * Mitigation measures', 'moderate_frame_rate:evidence_full'='evidence_full * Moderate frame', 'dangerous_frame_rate:mitigation_measure_rate'='Dangerous frame * Mitigation measures', 'moderate_frame_rate:dangerous_frame_rate'='Dangerous frame * moderate frame')
cap <- 'Table 1. Effects of Frames and Evidence on Suppression Measures (NLP variables)'
tab<-modelsummary(models, output='flextable',  coef_map=cm, stars =TRUE, title=cap)
# Printing results
tab %>%autofit()
